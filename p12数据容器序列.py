"""

    序列：内容连续、有序，可使用下标索引的一类数据容器（列表、元组、字符串均可视为序列）
    序列支持切片，即：列表、元组、字符串，军支持进行切片操作
    切片，从一个序列中，取出一个子序列
        语法：序列[起始下标:结束下标:步长]——表示从序列中，从指定位置开始，依次取出元素，到指定位置结束，得到一个新序列：
            起始下标表示从何处开始，可以留空，留空视作从头开始
            结束下标(不含)表示何处结束，可以留空，留空视作截取结尾
            步长表示，依次取元素的间隔
                步长1表示，一个个取元素
                步长2表示，每次跳过1个元素取
                步长N表示，每次跳过N-1个元素取
                步长为负数表示，反向取(注意，七十下标和结束下标也要反向标记)
            ***** 切片不会影响序列本身，而是会得到新的序列
"""

# 演示
# 对list进行切片,从1开始，4结束，步长1
my_list = [0,1,2,3,4,5,6]
num = my_list[1:4]   # 步长默认为1,所以可以省略不写
print(num)  # 结果为[1,2,3]

# 对list进行切片，从3开始，到1结束，步长-1
num2 = my_list[3:1:-1]
print(num2)  # 结果为[3,2]

# 对tuple进行切片,从头开始，到最后结束，步长1
my_tuple = (0,1,2,3,4,5,6)
num3 = my_tuple[:]   # 起始和结束不写,表示从头到尾,步长为1,所以可以省略
print(num3) # 结果为(0,1,2,3,4,5,6)

# 对tuple进行切片,从头开始,到尾结束,步长-2
num4 = my_tuple[::-2]
print(num4)     # 结果为(6,4,2,0)

# 对str进行切片，从头开始，到最后结束，步长2
my_str = "0123456"
num5 = my_str[::2]
print(num5) # 0246

# 对str进行切片，从头开始，到最后结束，步长-1
num6 = my_str[::-1]
print(num6)


# work
my_str = "万过薪月,员序程马黑来,nohtyP学"
# 倒序字符串,切片取出
result1 = my_str[::-1][9:14]
print(result1)
# 切片取出,如何倒序
result2 = my_str[5:10][::-1]
print(result2)
# split分割,replace替换来为空,倒序字符串
result3 = my_str.split(",")[1].replace("来","")[::-1]
print(result3)



